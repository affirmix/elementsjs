{"version":3,"sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","demo.js","demo/app.js","demo/example-controller.js","demo/example-model.js","demo/example-view.js","src/controller.js","src/model.js","src/utility.js","src/view.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"ExampleController","document","./example-controller",2,"module","_prototypeProperties","child","staticProps","instanceProps","Object","defineProperties","prototype","_inherits","subClass","superClass","TypeError","create","constructor","value","enumerable","writable","configurable","__proto__","Controller","ExampleModel","ExampleView","getPrototypeOf","apply","this","arguments","defaults","get","selectors","displayElement","searchField","searchButton","listeners","selector","handler","displayArtist","example","initialize","console","log","$","view","render","find","term","val","event","stopPropagation","__esModule","../src/controller","./example-model","./example-view",3,"Model","services","method","uri","format","update","delete","filter","data","results","Array","../src/model",4,"View","template","artistName","trackName","../src/view",5,"_slicedToArray","arr","isArray","_step","_arr","_iterator","Symbol","iterator","next","done","push","context","__defaults__","__listeners__","classIterator","hasOwnProperty","assign","concat","element","listener","_sSSS$exec","exec","_sSSS$exec2","objectString","selectorElement","objectProperties","split","shift","is","on","proxy","test","readyState","trigger","classReference","eval","name","destroy","isIncludeElement","undefined","remove",6,"Utility","attributes","hydrate","save","__find__","findOrFail","when","findOrNew","firstOrCreate","firstOrNew","updateOrCreate","properties","_this","deferred","Deferred","ajax","type","url","stringFormat","dataType","resolve","promise","result","item","isSingle","filtered","whittled","merged","./utility",7,"generateGuid","four","Math","random","toString","substring","replace","match","key",8,"request"],"mappings":"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","file":"demo.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"import {ExampleController} from './example-controller';\n\nlet app = new ExampleController(document);\n","import {Controller} from '../src/controller';\nimport {ExampleModel} from './example-model';\nimport {ExampleView} from './example-view';\n\nexport class ExampleController extends Controller {\n\tget defaults() {\n\t\treturn {\n\t\t\tselectors : {\n\t\t\t\tdisplayElement : '.display'\n\t\t\t\t,searchField : '.search-field'\n\t\t\t\t,searchButton : '.search-button'\n\t\t\t}\n\t\t};\n\t}\n\n\tget listeners() {\n\t\treturn [\n\t\t\t{ selector : '{selectors.searchButton} click', handler : this.displayArtist }\n\t\t\t,{ selector : 'click', handler : this.example }\n\t\t];\n\t}\n\n\tinitialize(element) {\n\t\tconsole.log('exampleController.initialize()');\n\t}\n\n\tdisplayArtist(event, element) {\n\t\tconsole.log('exampleController.displayArtist()');\n\n\t\t$(this.selectors.displayElement).view(\n\t\t\tExampleView.render(\n\t\t\t\tExampleModel.find({\n\t\t\t\t\tterm : $(this.selectors.searchField).val()\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t}\n\n\texample(event) {\n\t\tconsole.log('exampleController.example()');\n\n\t\tevent.stopPropagation();\n\t}\n}\n","import {Model} from '../src/model';\n\nexport class ExampleModel extends Model {\n\tstatic get services() {\n\t\treturn {\n\t\t\tcreate : { method : 'POST', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t\t\t,find : { method : 'GET', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t\t\t,update : { method : 'PUT', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t\t\t,delete : { method : 'DELETE', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t\t};\n\t}\n\n\tstatic filter(data) {\n\t\tconsole.log('ExampleModel.filter()');\n\n\t\tif(data.results instanceof Array){\n\t\t\treturn data.results;\n\t\t}else{\n\t\t\tthrow new Error('Could not filter results of non-array in class ExampleModel');\n\t\t}\n\t}\n}\n","import {View} from '../src/view';\n\nexport class ExampleView extends View {\n\tstatic template(data) {\n\t\tconsole.log('exampleView.template()');\n\n\t\treturn `\n\t\t\t<h2>\n\t\t\t\t<span style=\"color: #808080;\">${data[0].artistName}</span> ${data[0].trackName}\n\t\t\t</h2>\n\t\t`;\n\t}\n}\n","/**\n * @class View\n * @author Andrew Odri andrew@affirmix.com\n *\n * This class is the base controller in TungstenJS. A defaults property is provided to be overridden and merged allowing you to define common selectors, classes, and strings that will be referenced throughout your controller.\n *\n * You can also bind element events to controller functions by defining a new entry in the listeners property. See the demo application for an example implementation.\n *\n * The event binding system and other elements of functionality are inspired by [JavascriptMVC's](http://javascriptmvc.com/) [implementation of the controller](http://javascriptmvc.com/docs/can.Control.html).\n */\nexport class Controller {\n\t/**\n\t* @static\n\t* @property {Class} classReference Reference to the current class\n\t*\n\t* This returns a reference that whatever the top-most sub-class is, which comes in handy when managing instances in static functions on classes that are designed to be extended.\n\t*/\n\tstatic get classReference() { return eval(this.name); }\n\n\t/**\n\t* @property {Class} classReference Reference to the current class\n\t*\n\t* This returns a reference that whatever the top-most sub-class is, which comes in handy when managing instances in static functions on classes that are designed to be extended.\n\t*/\n\tget classReference() { return eval(this.constructor.name); }\n\n\t/**\n\t * @property {Object} defaults The properties of this object will be merged into the controller itself, providing default values for the controller\n\t *\n\t * Defines default properties that will be merged into each controller instance by default.\n\t *\n\t * Due to the lack of support for class properties in ECMAScript 6, properties have been defined in getters, which are then merged with thier super functions by the constructor.\n\t *\n\t * Below is an example of a standard override of defaults that merges with it's sub class:\n\t *\n\t *\tget defaults() {\n\t *\t\treturn {\n\t *\t\t\tselectors : {\n\t *\t\t\t\tdisplayElement : '.display'\n\t *\t\t\t\t,searchField : '.search-field'\n\t *\t\t\t\t,searchButton : '.search-button'\n\t *\t\t\t}\n\t *\t\t\t,classes : {\n\t *\t\t\t\tactive : 'active'\n\t *\t\t\t\t,selected : 'selected'\n\t *\t\t\t\t,loading : 'loading'\n\t *\t\t\t}\n\t *\t\t};\n\t *\t}\n\t *\n\t * These properties can be accessed straight from controller instance itself. For example, to access selectors.displayElement defined in the above example, you would reference it with `controllerInstance.selectors.displayElement`. See the demo application for an example implementation.\n\t */\n\tget defaults() {\n\t\treturn {}\n\t}\n\n\t/**\n\t * @todo In each listener object, separate the event from the selector and give it it's own event property\n\t * @property {Array} listeners An array of objects that represent DOM query selectors, events, and callback functions for DOM event binding on the controller\n\t *\n\t * Defines the listener object which will be parsed through and then bound during construction. See the demo application for an example implementation.\n\t *\n\t * Due to the lack of support for class properties in ECMAScript 6, properties have been defined in getters, which are then merged with thier super functions by the constructor.\n\t *\n\t * Below is an example of a standard override of defaults that merges with it's sub class:\n\t *\n\t *\tget listeners() {\n\t *\t\treturn [\n\t *\t\t\t{ selector : '{selectors.searchButton} click', handler : this.example }\n\t *\t\t\t,{ selector : 'div#identification.classification click', handler : this.example }\n\t *\t\t\t,{ selector : 'click', handler : this.example }\n\t *\t\t];\n\t *\t}\n\t */\n\tget listeners() {\n\t\treturn []\n\t}\n\n\t/**\n\t * @todo Investigate whether re-triggering ready and load events will cause issues\n\t * @param {DOMElement} context Element that the controller will be bound to and use as it's scope\n\t * @returns {Controller} Instance of the controller object\n\t *\n\t * The first thing the contructor does is merge this.defaults and this.listeners with the values defined in each super class. \"Private\" variables are created for acess within the constructor.\n\t *\n\t * Then, the element property of the controller is set to a jQuery object of the context. This will provide access to the jQuery function easily, and allow for easy referencing through the controller.\n\t *\n\t * Next, the properties in default are also merged into the controller instance.\n\t *\n\t * The listeners property is then parsed, binding all events to the defined functions, and passing them the correct context.\n\t *\n\t * In non-native ECMAScript 6 browsers, the code is often processed after document ready and load events are fired, so if these have been missed, they are triggered again.\n\t *\n\t * After all the processing is complete, the initialize function is called. This allows sub classes to perform thier own initialization after the core controller initialization has taken place in the constructor without having to explicitly call the constructor's. See the demo application for an example implementation.\n\t */\n\tconstructor(context) {\n\t\tconsole.log('controller.constructor()');\n\n\t\tthis.__defaults__ = this.defaults;\n\t\tthis.__listeners__ = this.listeners;\n\n\t\t// What is this black magic? Ghetto introspection baby... We are basically taking the ugly out of each getter and putting into one lump of super-ugly\n\t\tvar classIterator = this.constructor.__proto__;\n\n\t\t// Check if the prototype is defined; if it is empty then super class is now Object and we can't go further\n\t\twhile(classIterator.hasOwnProperty('prototype')){\n\t\t\tif(classIterator.prototype.hasOwnProperty('defaults')){\n\t\t\t\tthis.__defaults__ = Object.assign(classIterator.prototype.defaults, this.__defaults__);\n\t\t\t}\n\n\t\t\tif(classIterator.prototype.hasOwnProperty('listeners')){\n\t\t\t\tthis.__listeners__ = classIterator.prototype.listeners.concat(this.__listeners__);\n\t\t\t}\n\n\t\t\t// We are going down the rabbit hole now... Try and access the current classIterator's super class...\n\t\t\tclassIterator = classIterator.constructor.__proto__;\n\t\t}\n\n\t\t// Rename context to element, and element to targetElement...\n\t\tthis.element = $(context);\n\n\t\t// Merge defaults into the instance of this class... (I don't know if this is a good idea yet)\n\t\tObject.assign(this, this.__defaults__);\n\n\t\tfor(let listener of this.__listeners__){\n\t\t\t// Set all the main variables through destructured assignment...\n\t\t\tlet [, objectString, selectorElement, event] = /(?:\\{([^\\{\\}\\s]*)\\})*(\\S+)*?\\s*?(\\S+)/.exec(listener.selector);\n\n\t\t\t// Break apart the object string and retrieve the reference...\n\t\t\tif(objectString){\n\t\t\t\tlet objectProperties = objectString.split('.');\n\t\t\t\tselectorElement = this.defaults;\n\n\t\t\t\twhile(objectProperties.length >= 1){\n\t\t\t\t\tselectorElement = selectorElement[objectProperties.shift()];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If no element was set, then assume it is the parent element...\n\t\t\tif(!selectorElement){\n\t\t\t\tselectorElement = context\n\t\t\t}\n\n\t\t\t// Try and make this jQuery independant at some point...\n\t\t\tif($(selectorElement).is(context)){\n\t\t\t\t$(selectorElement).on(event, $.proxy(listener.handler, this));\n\t\t\t}else{\n\t\t\t\t$(selectorElement, $(context)).on(event, $.proxy(listener.handler, this));\n\t\t\t}\n\n\t\t\t// Non-native ES6 implementations only parse code after document ready and load events, so we need to re-trigger them...\n\t\t\tif($(selectorElement).is(document) && event == 'ready' && /interactive|complete/.test(document.readyState)){\n\t\t\t\t$(selectorElement).trigger('ready');\n\t\t\t}\n\t\t\tif($(selectorElement).is(document) && event == 'load' && /complete/.test(document.readyState)){\n\t\t\t\t$(selectorElement).trigger('load');\n\t\t\t}\n\n\t\t\t//console.log(selectorElement, event, listener.handler, document.readyState);\n\t\t}\n\n\t\tthis.initialize(context);\n\t}\n\n\t/**\n\t * @param {DOMElement} element Element that the constructor object uses for scoping\n\t *\n\t * This function is designed to be overriden, allowing sub classes to perform thier own initialization after the core controller initialization has taken place in the constructor without having to explicitly call the constructor.\n\t */\n\tinitialize(element) {\n\t\tconsole.log('controller.initialize()');\n\t}\n\n\t/**\n\t* @param {Boolean} isIncludeElement Defines whether the DOM element that the controller is attached to should also be destroyed.\n\t*\n\t* This function destroys the instance of the controller, as well as the DOM element if defined.\n\t*/\n\tdestroy(isIncludeElement = false) {\n\t\tconsole.log('controller.destroy()');\n\n\t\tif(isIncludeElement){\n\t\t\tthis.element.remove();\n\t\t}\n\n\t\tdelete this;\n\t}\n}\n","import {Utility} from './utility';\n\n/**\n * @class Model\n * @author Andrew Odri andrew@affirmix.com\n *\n * This class is designed to be an abstract model class. RESTful JSON services are also natively supported with full functionality easily enabled by overriding the services getter.\n *\n * This early version only implements the following functions: `find`, `findOrNew`, `findOrFail`, `filter`, and `hydrate`. Services can be defined and are partially implemented.\n *\n * Custom models can be defined by extending this class and overriding any appropriate properties and functions that you wish to customize. See the demo application for an example implementation.\n *\n * In the case of most RESTful APIs, you will only need to override the `services` property and the `filter` function.\n *\n * The naming conventions and structure for the majority of the functions and methods provided are inspired by [Laravel's](http://laravel.com/) [Eloquent ORM Model](http://laravel.com/api/4.2/Illuminate/Database/Eloquent/Model.html).\n */\nexport class Model {\n\t/**\n\t* @static\n\t* @property {Class} classReference Reference to the current class\n\t*\n\t* This returns a reference that whatever the top-most sub-class is, which comes in handy when managing instances in static functions on classes that are designed to be extended.\n\t*/\n\tstatic get classReference() { return eval(this.name); }\n\n\t/**\n\t* @property {Class} classReference Reference to the current class\n\t*\n\t* This returns a reference that whatever the top-most sub-class is, which comes in handy when managing instances in static functions on classes that are designed to be extended.\n\t*/\n\tget classReference() { return eval(this.constructor.name); }\n\n\t/**\n\t * @static\n\t * @property {Object} services Object containing create, find, update, and delete properties that define RESTful service endpoints\n\t *\n\t * Templated URLs are supported using ECMAScript 6 quasi-literal tenplate syntax. See the MDN documentation for more information. See the demo application for an example implementation.\n\t *\n\t * Due to the lack of support for class properties in ECMAScript 6, properties have been defined in getters that merge with thier super functions.\n\t *\n\t * Below is an example of a standard override of services that merges with it's sub class:\n\t *\n\t *\tstatic get services() {\n\t *\t\treturn super.services.merge({\n\t *\t\t\tcreate : { method : 'POST', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t *\t\t\t,find : { method : 'GET', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t *\t\t\t,update : { method : 'PUT', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t *\t\t\t,delete : { method : 'DELETE', uri : 'https://itunes.apple.com/search?term=${term}', format : 'jsonp' }\n\t *\t\t});\n\t *\t}\n\t */\n\tstatic get services() {\n\t\treturn {\n\t\t\tcreate : { method : 'POST', uri : '', format : 'jsonp' }\n\t\t\t,find : { method : 'GET', uri : '', format : 'jsonp' }\n\t\t\t,update : { method : 'PUT', uri : '', format : 'jsonp' }\n\t\t\t,delete : { method : 'DELETE', uri : '', format : 'jsonp' }\n\t\t}\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t * @static\n\t * @param {Object} attributes Attributes that will be used to hydrate a new model instance. See `hydrate` for more information\n\t * @returns {Model} Deferred instance of the newly created model\n\t *\n\t * Creates a new instance of the model, and performs a save operation.\n\t */\n\tstatic create(attributes){\n\t\tconsole.log('Model.create()');\n\n\t\treturn this.hydrate(attributes).save();\n\t}\n\n\t/**\n\t * @todo Implement `first`, `firstOrCreate`, and `firstOrNew` to return a single instance, and always return an array with this function\n\t * @static\n\t * @param {Object} attributes An object containing properties that correspond to the attributes in the templated RESTful URL, if not overriden by custom functionality\n\t * @returns {Array|Model} Deferred instance of the Models that are found\n\t *\n\t * Finds and returns any available instances of the model.\n\t */\n\tstatic find(attributes) {\n\t\tconsole.log('Model.find()');\n\n\t\treturn this.__find__(attributes);\n\t}\n\n\t/**\n\t* @static\n\t* @param {Object} attributes An object containing properties that correspond to the attributes in the templated RESTful URL, if not overriden by custom functionality\n\t* @returns {Array|Model} Deferred instance of the models that are found\n\t*\n\t* Finds and returns once or more instances of the model or throws and error if none are found.\n\t*/\n\tstatic findOrFail(attributes) {\n\t\tconsole.log('Model.findOrFail()');\n\n\t\t$.when(\n\t\t\tthis.__find__(attributes)\n\t\t).done(function(data){\n\t\t\tif((data instanceof Object && data != {}) || (data instanceof Array && data != [])){\n\t\t\t\treturn data;\n\t\t\t}else{\n\t\t\t\tthrow new Error('Could not find instance of Model in class Model');\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t * @static\n\t * @param {Object} attributes An object containing properties that correspond to the attributes in the templated RESTful URL, if not overriden by custom functionality\n\t * @returns {Array|Model} Deferred instance of the Models that are found\n\t *\n\t * Finds and returns once or more instances of the model or creates a new instance if none are found.\n\t */\n\tstatic findOrNew(attributes) {\n\t\tconsole.log('Model.findOrNew()');\n\n\t\t$.when(\n\t\t\tthis.__find__(attributes)\n\t\t).done(function(data){\n\t\t\tif((data instanceof Object && data != {}) || (data instanceof Array && data != [])){\n\t\t\t\treturn data;\n\t\t\t}else{\n\t\t\t\treturn this.hydrate(attributes);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t* @todo Implement this function\n\t* @static\n\t* @param {Object} attributes An object containing properties that correspond to the attributes in the templated RESTful URL, if not overriden by custom functionality\n\t* @returns {Array|Model} Deferred instance of the Models that are found\n\t*\n\t* Finds and returns the first instance of the model or creates a new instance and saves it if none are found.\n\t*/\n\tstatic firstOrCreate(attributes) {\n\t\tconsole.log('Model.firstOrCreate()');\n\n\t\t$.when(\n\t\t\tthis.__find__(attributes, true)\n\t\t).done(function(data){\n\t\t\tif(data instanceof Object && data != {}){\n\t\t\t\treturn data;\n\t\t\t}else if(data instanceof Array && data != []){\n\t\t\t\treturn data[0];\n\t\t\t}else{\n\t\t\t\treturn this.hydrate(attributes).save();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t* @todo Implement this function\n\t* @static\n\t* @param {Object} attributes An object containing properties that correspond to the attributes in the templated RESTful URL, if not overriden by custom functionality\n\t* @returns {Array|Model} Deferred instance of the Models that are found\n\t*\n\t* Finds and returns the first instance of the model or creates a new instance if none are found.\n\t*/\n\tstatic firstOrNew(attributes) {\n\t\tconsole.log('Model.firstOrNew()');\n\n\t\t$.when(\n\t\t\tthis.__find__(attributes, true)\n\t\t).done(function(data){\n\t\t\tif(data instanceof Object && data != {}){\n\t\t\t\treturn data;\n\t\t\t}else if(data instanceof Array && data != []){\n\t\t\t\treturn data[0];\n\t\t\t}else{\n\t\t\t\treturn this.hydrate(attributes);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t * @static\n\t * @param {Object} attributes Attributes used to return the models that need to be updated\n\t * @param {Object} properties Properties that model instances will be updated with\n\t * @returns {Array} Deferred instance of the updated or created model(s)\n\t *\n\t * Create or update a model matching the attributes, and fill it with values.\n\t */\n\tstatic updateOrCreate(attributes, properties){\n\t\tconsole.log('Model.updateOrCreate()');\n\n\t\t$.when(\n\t\t\tthis.__find__(attributes, false, properties)\n\t\t).done(function(data){\n\t\t\tif((data instanceof Object && data != {} || data instanceof Array && data != [])){\n\t\t\t\treturn data;\n\t\t\t}else{\n\t\t\t\treturn this.hydrate(Object.assign(attributes, properties)).save();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t * @static\n\t * @param {Array} items Model instances to be deleted\n\t * @returns {Boolean} Boolean expressing whether the operation was successful\n\t *\n\t * Destroys the model instances provided, and performs a delete operation.\n\t */\n\tstatic destroy(items){\n\t\tconsole.log('Model.destroy()');\n\n\t\tvar deferred = $.Deferred();\n\n\t\t// Handle the parameteres and construct uri based on destructured assignment\n\n\t\t$.when(\n\t\t\t$.ajax({\n\t\t\t\ttype : this.services.delete.method\n\t\t\t\t,url : Utility.stringFormat(this.services.delete.uri, attributes)\n\t\t\t\t,dataType : this.services.delete.format\n\t\t\t})\n\t\t).done(\n\t\t\t(data, textStatus, jqXHR) => deferred.resolve(\n\t\t\t\tthis.hydrate(\n\t\t\t\t\tthis.filter(data)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\treturn deferred.promise();\n\t}\n\n\t/**\n\t * @static\n\t * @param {*} data Data returned by the find function\n\t * @returns {Array|Object} Processed data from the find function\n\t *\n\t * Designed to be overridden, this allows raw data returned from a RESTful `find` method to be be processed before being sent `hydrate` for instantiation. See the demo application for an example implementation.\n\t */\n\tstatic filter(data) {\n\t\tconsole.log('Model.filter()');\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * @static\n\t * @param {Array|Object} data Data needed to instantiate new model instances\n\t * @returns {Array|Model} Newly instantiated model/models\n\t *\n\t * Instantiates a model/models based on the data provided. This is called immediately after `filter`.\n\t */\n\tstatic hydrate(data) {\n\t\tconsole.log('Model.hydrate()');\n\n\t\tlet result;\n\n\t\tif(data instanceof Array){\n\t\t\tresult = [];\n\n\t\t\tfor(let item of data){\n\t\t\t\tif(item instanceof Object){\n\t\t\t\t\tresult.push(new this.classReference(item));\n\t\t\t\t}\n\t\t\t}\n\t\t}else if(data instanceof Object){\n\t\t\tresult = new this.classReference(data);\n\t\t}else{\n\t\t\tthrow new Error('Cannot hydrate model from a non-object in class Model');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t* @static\n\t* @param {Object} attributes An object containing properties that correspond to the attributes in the templated RESTful URL, if not overriden by custom functionality\n\t* @param {Boolean} isSingle An optional boolean that defines whether one or many models are returned. Defaults to false.\n\t* @param {Object} properties An optional object containing properties that need to be be updated in the model(s) returned. Defaults to {}.\n\t* @returns {Array|Model} Deferred instance of the Models that are found\n\t*\n\t* Internal function that finds and returns any available instances of the model.\n\t*/\n\tstatic __find__(attributes, isSingle = false, properties = {}) {\n\t\tconsole.log('Model.__find__()');\n\n\t\tvar deferred = $.Deferred();\n\n\t\t$.when(\n\t\t\t$.ajax({\n\t\t\t\ttype : this.services.find.method\n\t\t\t\t,url : Utility.stringFormat(this.services.find.uri, attributes)\n\t\t\t\t,dataType : this.services.find.format\n\t\t\t})\n\t\t).done(\n\t\t\t(data, textStatus, jqXHR) => {\n\t\t\t\tlet filtered = this.filter(data);\n\t\t\t\tlet whittled = ((isSingle || filtered.length == 1) && filtered instanceof Array) ? filtered[0] : filtered;\n\t\t\t\tlet merged = Object.assign(whittled, properties);\n\n\t\t\t\tdeferred.resolve(\n\t\t\t\t\tthis.hydrate(merged)\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\treturn deferred.promise();\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Object} attributes Attributes needed to instantiate new model instances\n\t * @returns {Model} Instance of the model\n\t *\n\t * Constructs the model instance by merging the attributes with the new model instance.\n\t */\n\tconstructor(attributes) {\n\t\tconsole.log('model.constructor()');\n\n\t\tObject.assign(this, attributes);\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t * @param {Object} attributes Attributes that will be used to hydrate a new model instance. See `hydrate` for more information.\n\t * @returns {Model} Deferred instance of the newly created model\n\t *\n\t * Updates the model, and performs an update operation.\n\t */\n\tupdate(attributes){\n\t\tconsole.log('model.update()');\n\n\t\tObject.assign(this, attributes).save();\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t * @returns {Model} Instance of the saved model\n\t *\n\t * Performs a save operation.\n\t */\n\tsave() {\n\t\tconsole.log('model.save()');\n\n\t\tvar deferred = $.Deferred();\n\n\t\t// May need to implement a check to see whether create or save would be better...\n\n\t\t$.when(\n\t\t\t$.ajax({\n\t\t\t\ttype : this.services.update.method\n\t\t\t\t,url : Utility.stringFormat(this.services.update.uri, attributes)\n\t\t\t\t,dataType : this.services.update.format\n\t\t\t})\n\t\t).done(\n\t\t\t(data, textStatus, jqXHR) => deferred.resolve(\n\t\t\t\tthis\n\t\t\t)\n\t\t);\n\n\t\treturn deferred.promise();\n\t}\n\n\t/**\n\t * @todo Implement this function\n\t *\n\t * Deletes the instance of the model.\n\t */\n\tdelete() {\n\t\tconsole.log('model.delete()');\n\n\t\tvar deferred = $.Deferred();\n\n\t\t$.when(\n\t\t\t$.ajax({\n\t\t\t\ttype : this.services.delete.method\n\t\t\t\t,url : Utility.stringFormat(this.services.delete.uri, attributes)\n\t\t\t\t,dataType : this.services.delete.format\n\t\t\t})\n\t\t).done(\n\t\t\t(data, textStatus, jqXHR) => deferred.resolve(\n\t\t\t\ttrue\n\t\t\t)\n\t\t);\n\n\t\treturn deferred.promise();\n\t}\n}\n","export class Utility {\r\n\tconstructor() {\r\n\t\tthrow new Error('Cannot instantiate static class Utility');\r\n\t}\r\n\r\n\tstatic generateGuid() {\r\n\t\tlet four = () => {return (((1+Math.random())*0x10000)|0).toString(16).substring(1);}\r\n\t\treturn `${four()}${four()}-${four()}-${four()}-${four()}-${four()}${four()}${four()}`;\r\n\t}\r\n\r\n\tstatic stringFormat(template, data) {\r\n\t\treturn template.replace(/\\$\\{([^\\{\\}]+)\\}/g, (match, key) => data[key]);\r\n\t}\r\n}\r\n","/**\n * @class View\n * @author Andrew Odri andrew@affirmix.com\n *\n * This class is the base view in TungstenJS. It provides a simple template property that can be overridden, and a render function that will chain any deferred responses.\n *\n * This view utilizes very basic template literals that are native to ECMAScript 6. This view is intended to be extended for use with other templating systems, for example `EJSView`, `MustacheView`, and `UnderscoreView` that are under development.\n */\nexport class View {\n\t/**\n\t* @static\n\t* @property {Class} classReference Reference to the current class\n\t*\n\t* This returns a reference that whatever the top-most sub-class is, which comes in handy when managing instances in static functions on classes that are designed to be extended.\n\t*/\n\tstatic get classReference() { return eval(this.name); }\n\n\t/**\n\t* @property {Class} classReference Reference to the current class\n\t*\n\t* This returns a reference that whatever the top-most sub-class is, which comes in handy when managing instances in static functions on classes that are designed to be extended.\n\t*/\n\tget classReference() { return eval(this.constructor.name); }\n\n\t/**\n\t * @param {Object} data This is data returned from the resolved promise in the render function\n\t * @returns {String} String containing the the HTML render buy the temaplte based on the data provided in the data parameter\n\t *\n\t * This function is called by the render function, providing with the data that is returned from the resolved promise object. While the template is currently implemented as an ECMAScript 6 template literal, it could also just return a path if the render function has been implemented with a 3rd party renderer.\n\t */\n\tstatic template(data) {\n\t\tconsole.log('View.template()');\n\n\t\treturn ``;\n\t}\n\n\t/**\n\t * @param {Object} request The request is a deferred object containing the data to be rendered by the view. Usually this is a deferred AJAX object returned by the model, but could be any appropriate object.\n\t * @return {Object} Returns a deferred object containing the rendered view HTML after it has been applied to the template in the in the template function\n\t *\n\t * This function take care of managing the rendering of the view. The bulk of the logic should be stored in the function if it is to be overriden for a 3rd party renderer. This allows the template object to be as simple as possible, so that it be overridden with just a simple template or path for real world view implementations.\n\t */\n\tstatic render(request) {\n\t\tconsole.log('View.render()');\n\n\t\tlet deferred = $.Deferred();\n\n\t\t$.when(request).done(\n\t\t\t(data, textStatus, jqXHR) => deferred.resolve(this.template(data))\n\t\t);\n\n\t\treturn deferred.promise();\n\t}\n}\n"],"sourceRoot":"/source/"}